<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
 
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
    <!-- commons dbcp : 앞 예제들처럼 properties를 사용하여 값설정을 하여도 됨 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/word?useUnicode=true&amp; characterEncoding=utf8&amp;"/>
        <property name="username" value="userdb"/>
        <property name="password" value="dbuser"/>
        <property name="validationQuery" value="select 1"/>
    </bean>
    
    <!-- mysql query문을 로그로 찍기위한 코드 
    <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="dataSourceSpied" />
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="loggingType" value="MULTI_LINE" />
                <property name="sqlPrefix" value="SQL         :  "/>
            </bean>
        </property>
    </bean>

 -->
    
    <!-- mybatis 세션생성을 위한 팩토리 생성 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis 세션생성시 사용할 dataSource주입 -->
        <property name="dataSource" ref="dataSource" />
        <!-- mybatis 세션생성후 쿼리를 실행시킬때 사용할 쿼리위치(메퍼)설정 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:mybatis/StudentMapper.xml
                </value>
                <value>classpath:mybatis/StudentGroupMapper.xml
                </value>
                <value>classpath:mybatis/AdminMapper.xml
                </value>
                 <value>classpath:mybatis/TestHistoryMapper.xml
                </value>
                <value>classpath:mybatis/TestResultMapper.xml
                </value>
                <value>classpath:mybatis/WordMapper.xml
                </value>
                <value>classpath:mybatis/ResultViewMapper.xml
                </value>
                 <value>classpath:mybatis/TimerMapper.xml
                </value>
            </list>
        </property>
    </bean>
    
    
  <!-- mybatis를 사용하여 db에접속하여 쿼리를 보내는 주체인 SqlSessionTemplate빈 생성-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    
    
    
    
    <bean id="multipartResolver" 

		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

	<!-- maximum file size in bytes 50MB -->

	<property name="maxUploadSize" value="52428800" />

</bean>

  
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
    <!-- Handles HTTP GET requests for /resources/**
        by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
   
    <!-- Resolves views selected for rendering
        by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
    
    
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
       <property name="contentNegotiationManager">  
        <bean class="org.springframework.web.accept.ContentNegotiationManager">  
            <constructor-arg>  
            <bean  
                class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">  
                <constructor-arg>  
                    <map>  
                        <entry key="json" value="application/json" />  
                    </map>     
                </constructor-arg>  
            </bean>  
            </constructor-arg>  
        </bean>  
    	</property>  
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="contentType" value="text/html; charset=UTF-8" />
                    <property name="prefix" value="/WEB-INF/views/" />
                    <property name="suffix" value=".jsp" />
                     <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <ref bean="jsonView" />
                <!-- <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" /> -->
            </list>
        </property>
    </bean>

     <bean name="cgr/egovCategoryList"
      class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
	

    <context:component-scan base-package="com.project.word" />
   
</beans>
